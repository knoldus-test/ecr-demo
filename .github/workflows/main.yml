# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  # build:
  #   name: Build Docker Image
  #   # The type of runner that the job will run on
  #   runs-on: [self-hosted, ecr-label]

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - name: Github Checkout
  #       uses: actions/checkout@v2
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ap-south-1

  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1
      
  #     - name: Build, tag, and push image to Amazon ECR
  #       env:
  #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         ECR_REPOSITORY: ecr-test-repo
  #         IMAGE_TAG: latest ##${{ github.sha }}
  #       run: |
  #         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
  #         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  
  get_ecr_image:
    name: Pull Image from AWS ECR
  
    runs-on: [self-hosted, ecr-label]
    # needs: build

    # container:
    #   image: 133615223499.dkr.ecr.ap-south-1.amazonaws.com/ecr-test-repo:latest
    #   credentials:
    #     username: ecr-aws-user
    #     password: ${{ secrets.AWS_PASSWORD }}
      
    # steps:
    #   - name: Run Docker image
    #     env:
    #       ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #       ECR_REPOSITORY: ecr-test-repo
    #       IMAGE_TAG: latest ##${{ github.sha }}
    #     run: docker run --rm $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    steps:
      # - name: Github Checkout
      #   uses: actions/checkout@v2
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Run ECR image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ecr-test-repo
          IMAGE_TAG: latest ##${{ github.sha }}
        run: docker run --rm $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG